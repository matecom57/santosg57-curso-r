Package: ggplot2
Version: 3.5.1
Title: Create Elegant Data Visualisations Using the Grammar of Graphics
Authors@R: c( person("Hadley", "Wickham", , "hadley@posit.co", role =
        "aut", comment = c(ORCID = "0000-0003-4757-117X")),
        person("Winston", "Chang", role = "aut", comment = c(ORCID =
        "0000-0002-1576-2126")), person("Lionel", "Henry", role =
        "aut"), person("Thomas Lin", "Pedersen", ,
        "thomas.pedersen@posit.co", role = c("aut", "cre"), comment =
        c(ORCID = "0000-0002-5147-4711")), person("Kohske",
        "Takahashi", role = "aut"), person("Claus", "Wilke", role =
        "aut", comment = c(ORCID = "0000-0002-7470-9261")),
        person("Kara", "Woo", role = "aut", comment = c(ORCID =
        "0000-0002-5125-4188")), person("Hiroaki", "Yutani", role =
        "aut", comment = c(ORCID = "0000-0002-3385-7233")),
        person("Dewey", "Dunnington", role = "aut", comment = c(ORCID =
        "0000-0002-9415-4582")), person("Teun", "van den Brand", role =
        "aut", comment = c(ORCID = "0000-0002-9335-7468")),
        person("Posit, PBC", role = c("cph", "fnd")) )
Description: A system for 'declaratively' creating graphics, based on
        "The Grammar of Graphics". You provide the data, tell 'ggplot2'
        how to map variables to aesthetics, what graphical primitives
        to use, and it takes care of the details.
License: MIT + file LICENSE
URL: https://ggplot2.tidyverse.org,
        https://github.com/tidyverse/ggplot2
BugReports: https://github.com/tidyverse/ggplot2/issues
Depends: R (>= 3.5)
Imports: cli, glue, grDevices, grid, gtable (>= 0.1.1), isoband,
        lifecycle (> 1.0.1), MASS, mgcv, rlang (>= 1.1.0), scales (>=
        1.3.0), stats, tibble, vctrs (>= 0.6.0), withr (>= 2.5.0)
Suggests: covr, dplyr, ggplot2movies, hexbin, Hmisc, knitr, mapproj,
        maps, multcomp, munsell, nlme, profvis, quantreg, ragg (>=
        1.2.6), RColorBrewer, rmarkdown, rpart, sf (>= 0.7-3), svglite
        (>= 2.1.2), testthat (>= 3.1.2), vdiffr (>= 1.0.6), xml2
Enhances: sp
VignetteBuilder: knitr
Config/Needs/website: ggtext, tidyr, forcats, tidyverse/tidytemplate
Config/testthat/edition: 3
Encoding: UTF-8
LazyData: true
RoxygenNote: 7.3.1
Collate: 'ggproto.R' 'ggplot-global.R' 'aaa-.R'
        'aes-colour-fill-alpha.R' .....
NeedsCompilation: no
Packaged: 2024-04-22 10:39:16 UTC; thomas
Author: Hadley Wickham [aut] (<https://orcid.org/0000-0003-4757-117X>),
        Winston Chang [aut] (<https://orcid.org/0000-0002-1576-2126>),
        Lionel Henry [aut], Thomas Lin Pedersen [aut, cre]
        (<https://orcid.org/0000-0002-5147-4711>), Kohske Takahashi
        [aut], Claus Wilke [aut]
        (<https://orcid.org/0000-0002-7470-9261>), Kara Woo [aut]
        (<https://orcid.org/0000-0002-5125-4188>), Hiroaki Yutani [aut]
        (<https://orcid.org/0000-0002-3385-7233>), Dewey Dunnington
        [aut] (<https://orcid.org/0000-0002-9415-4582>), Teun van den
        Brand [aut] (<https://orcid.org/0000-0002-9335-7468>), Posit,
        PBC [cph, fnd]
Maintainer: Thomas Lin Pedersen <thomas.pedersen@posit.co>
Repository: CRAN
Date/Publication: 2024-04-23 08:00:08 UTC
Built: R 4.1.2; ; 2025-03-24 08:58:45 UTC; unix

-- File: /home/santosg/R/x86_64-pc-linux-gnu-library/4.1/ggplot2/Meta/package.rds 
ggplot                 package:ggplot2                 R Documentation

_C_r_e_a_t_e _a _n_e_w _g_g_p_l_o_t

_D_e_s_c_r_i_p_t_i_o_n:

     ‘ggplot()’ initializes a ggplot object. It can be used to declare
     the input data frame for a graphic and to specify the set of plot
     aesthetics intended to be common throughout all subsequent layers
     unless specifically overridden.

_U_s_a_g_e:

     ggplot(data = NULL, mapping = aes(), ..., environment = parent.frame())
     
_A_r_g_u_m_e_n_t_s:

    data: Default dataset to use for plot. If not already a data.frame,
          will be converted to one by ‘fortify()’. If not specified,
          must be supplied in each layer added to the plot.

 mapping: Default list of aesthetic mappings to use for plot. If not
          specified, must be supplied in each layer added to the plot.

     ...: Other arguments passed on to methods. Not currently used.

environment: *[Deprecated]* Used prior to tidy evaluation.

_D_e_t_a_i_l_s:

     ‘ggplot()’ is used to construct the initial plot object, and is
     almost always followed by a plus sign (‘+’) to add components to
     the plot.

     There are three common patterns used to invoke ‘ggplot()’:

        • ggplot(data = df, mapping = aes(x, y, other aesthetics))

        • ‘ggplot(data = df)’

        • ‘ggplot()’

     The first pattern is recommended if all layers use the same data
     and the same set of aesthetics, although this method can also be
     used when adding a layer using data from another data frame.

     The second pattern specifies the default data frame to use for the
     plot, but no aesthetics are defined up front. This is useful when
     one data frame is used predominantly for the plot, but the
     aesthetics vary from one layer to another.

     The third pattern initializes a skeleton ‘ggplot’ object, which is
     fleshed out as layers are added. This is useful when multiple data
     frames are used to produce different layers, as is often the case
     in complex graphics.

     The data = and mapping = specifications in the arguments are
     optional (and are often omitted in practice), so long as the data
     and the mapping values are passed into the function in the right
     order. In the examples below, however, they are left in place for
     clarity.

_S_e_e _A_l_s_o:

     The first steps chapter of the online ggplot2 book.

_E_x_a_m_p_l_e_s:

     # Create a data frame with some sample data, then create a data frame
     # containing the mean value for each group in the sample data.
     set.seed(1)
     
     sample_df <- data.frame(
       group = factor(rep(letters[1:3], each = 10)),
       value = rnorm(30)
     )
     
     group_means_df <- setNames(
       aggregate(value ~ group, sample_df, mean),
       c("group", "group_mean")
     )
     
     # The following three code blocks create the same graphic, each using one
     # of the three patterns specified above. In each graphic, the sample data
     # are plotted in the first layer and the group means data frame is used to
     # plot larger red points on top of the sample data in the second layer.
     
     # Pattern 1
     # Both the `data` and `mapping` arguments are passed into the `ggplot()`
     # call. Those arguments are omitted in the first `geom_point()` layer
     # because they get passed along from the `ggplot()` call. Note that the
     # second `geom_point()` layer re-uses the `x = group` aesthetic through
     # that mechanism but overrides the y-position aesthetic.
     ggplot(data = sample_df, mapping = aes(x = group, y = value)) +
       geom_point() +
       geom_point(
         mapping = aes(y = group_mean), data = group_means_df,
         colour = 'red', size = 3
       )
     
     # Pattern 2
     # Same plot as above, passing only the `data` argument into the `ggplot()`
     # call. The `mapping` arguments are now required in each `geom_point()`
     # layer because there is no `mapping` argument passed along from the
     # `ggplot()` call.
     ggplot(data = sample_df) +
       geom_point(mapping = aes(x = group, y = value)) +
       geom_point(
         mapping = aes(x = group, y = group_mean), data = group_means_df,
         colour = 'red', size = 3
       )
     
     # Pattern 3
     # Same plot as above, passing neither the `data` or `mapping` arguments
     # into the `ggplot()` call. Both those arguments are now required in
     # each `geom_point()` layer. This pattern can be particularly useful when
     # creating more complex graphics with many layers using data from multiple
     # data frames.
     ggplot() +
       geom_point(mapping = aes(x = group, y = value), data = sample_df) +
       geom_point(
         mapping = aes(x = group, y = group_mean), data = group_means_df,
         colour = 'red', size = 3
       )
     

