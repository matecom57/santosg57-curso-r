total
ls()
dir()
ls()
rm(x,y)
ls()
getwd()
dir()
3 + 4
x=5
x <- 5
5 -> x
x <- 5
x^2
y <- x^2
y
print(3 + 4)
3+4
print(3 + 4)
print(paste('the sum is', 3 + 4))
print('the sum is', 3 + 4)
print(paste('the sum is', 3 + 4))
x = paste('hola', 6+4, 'holas')
x
x = 'hola'
x = "hola"
cat('the sum is', 3 + 4, '\n')
cat('the sum is', 3 + 4)
as.integer(2.56)
as.integer(2.9)
x <- 5
class(x)
is.integer(x)
x <- as.integer(5)
class(x)
is.integer(x)
s1 = "string"
is.character(s1)
is.character(5.2)
is.character('5.2')
as.character(2.5)
as.character(1000000)
as.character(10^6)
as.character(1e6)
TRUE
x= FALSE
x
class(x)
as.logical(x)
x
as.logical(3)
as.logical(0)
as.logical(.2)
as.logical(0)
as.logical(-1)
as.logical(.00001)
as.logical(-.00001)
5>3 | 4 > 6
5>3 & !(4 > 6)
z = 2 + 3i
z
z^2
i*i
sqrt(-1)
x <- 2
if (x > 0) {#
y = 'positive'#
} else {#
y = 'negative or zero'#
}
y
x = -2
if (x > 0) {#
y = 'positive'#
} else {#
y = 'negative or zero'#
}
y
x = 2
y
y = if (x > 0) 'positive' else 'negative or zero'
y
x = -2
y = ifelse(x > 0, 'positive', 'negative or zero')
y
total = 0
i = 1
repeat {#
    total = total + i^2#
    if (i == 10) break#
    i = i + 1#
}
total
repeat {#
    total = total + i^2
i = i + 1
if (i == 10) break
}
3:10
seq(2, 20,2)
seq(2, 20,3)
hola <- function(){}
hola <- function(){
print('hola mundo')
}
hola
hola()
v1 = c(2,3,1,4)
v2=c(4,3,2,2)
v3 = v1+v2#
v3
v3 = v1*v2#
v3
v3 = v1/v2#
v3
v3 = v1^3#
v3
pwd
ls
x <- c(1, 1.5, 2, 3, 3.5, 4)#
#
y <- c(3, 5, 3, 6, 2, 1,)#
#
plot(x,y)
x <- c(1, 1.5, 2, 3, 3.5, 4)#
#
y <- c(3, 5, 3, 6, 2, 1)#
#
plot(x,y)
x <- c(1, 1.5, 2, 3, 3.5, 4)#
y <- c(3, 5, 3, 6, 2, 1)#
plot(x,y)
x <- seq(-2,4,.1)#
#
y <- x^2#
#
plot(x,y)#
#
points(x, x^3, col='red')
x
x = c(1,3,2,1)
y = c(3,2,3)
boxplot(x,y)
boxplot(x,y, x)
x <- round(runif(7, min=50, max=60))
x
x <- round(runif(12, min=50, max=65))
x
x <- round(runif(12, min=45, max=65))
x
x <- seq(-2,4,.1)#
y <- x^2#
plot(x,y, type='l')#
#
points(x, x^3, col='red', type='l')
x <- c(58, 53, 50, 52, 55, 53, 53)#
y <- c(58, 59, 53, 55, 64, 55, 56, 64, 57, 62, 60, 59)#
z <- c(56, 65, 50, 47, 63, 60, 61, 46, 62, 58, 57, 61)#
#
boxplot(x,y,z)
x <- c(58, 53, 50, 52, 55, 53, 53)#
y <- c(58, 59, 53, 55, 64, 55, 56, 64, 57, 62, 60, 59)#
z <- c(56, 65, 50, 47, 63, 60, 61, 46, 62, 58, 57, 61)#
#
w <- c(x,y,z)#
f = factor(rep(1, 7), rep(2,12), rep(3,12))#
boxplot(w ~ f)
f
w
f
x <- c(58, 53, 50, 52, 55, 53, 53)#
barplot(x)
?barplot
x <- c(58, 53, 50, 52, 55, 53, 53)#
y <- c(58, 59, 53, 55, 64, 55, 56, 64, 57, 62, 60, 59)#
z <- c(56, 65, 50, 47, 63, 60, 61, 46, 62, 58, 57, 61)#
#
w <- c(x,y,z)#
f = factor(c(rep(1, 7), rep(2,12), rep(3,12)))#
boxplot(w ~ f)
x
std(x)
sdt(x)
sd(x)
quantile(x)
x <- seq(-3,3,.1)#
y <- dnorm(x)#
plot(x,y, type='l', main='Densidad Normal')
x <- seq(-3,3,.1)#
y <- dnorm(x)#
#
par(mfrow=c(2,2)#
plot(x,y, type='l', main='Densidad Normal')#
#
r = rnorm(100)#
plot(r, main='Números Aleatorios')#
#
p = pnorm(x, , main='Frecuencia Acumulada')
x <- seq(-3,3,.1)#
y <- dnorm(x)#
#
par(mfrow=c(2,2))#
plot(x,y, type='l', main='Densidad Normal')#
#
r = rnorm(100)#
plot(r, main='Números Aleatorios')#
#
p = pnorm(x, , main='Frecuencia Acumulada')
rchisq
?rchisq
?rt
x=2;y=3
z='x^2+1/y'
eval(z)
z="x^2+1/y"
eval(z)
x
y
eval(parse(text="5+5"))
eval(parse("5+5"))
eval("5+5")
mat = matrix(round(runif(12, min=2, max=20)))
mat
mat = matrix(round(runif(12, min=2, max=20)), ncol=4)
mat
ma = max(mat)
ma
image(mat, col= gray.colors(20)))
image(mat, col= gray.colors(ma))
?matrix
is.matrix(mat)
is.matrix(1:3)
?matrix
m = array(1:24, dim=c(4,3,2))
m
m[,,2]
m[2,1,2]
m[,2,1]
dir()
library(RNifti)
x = readNifti('func.nii.gz')
class(x)
dim(x)
im = x[,,10,1]
image(im)
im = x[,,15,1]
image(im)
image(1:64, 1:64,im)
dim(x)
s = x[27,10,15,]
plot(s)
x = array(1:32, dim=c(2,4,2,2))
dim(x)
x
x = array(1:64, dim=c(2,4,2,2,2))
dim(x)
x
m = matrix(1:12, ncol=3)
m
s = colSums(m)
s
s = rowSums(m)
s
m = array(1:24, dim=c(4,3,2))
m
s = apply(m,3,sum)
s
s = apply(m,3,mean)
s
s = apply(m,3,me)
s = apply(m,1,sum)
s
m
s = apply(m,1,sqrt)
s
2.23^2
m
m1 <- m[,,2]
m1
s = apply(m1,1,sqrt)
s
s = apply(m1,1,median)
s
s = apply(m1,1,var)
s
m1
s = apply(m1,1,mean)
s
x1 = 1:10#
x2 = seq(0,1,.1)#
x3 = matrix(1:12, ncol=3)#
x4 = array(1:24, dim=c(4,3,2))
m = list(x1, x2, x3, x4)
class(m)
m
m
m[[3]]
m[3]
m[4]
m[4]
m[[4]]
m[1]
m[1][5]
m[1][5]
m[[1]][5]
m
m[[3]][3,]
m[[4]][2,,2]
mm = list(y1=x1, y2=x2, y=x3, y99=x4)
mm
mm$y
mm$y[2,]
m
m
save(mm, file = "m.RData")
dir()
rm(list=ls())
ls()
load("m.RData")
ls()
mm
rm(list=ls())
ls()
mm
mm
load("m.RData")
mm
